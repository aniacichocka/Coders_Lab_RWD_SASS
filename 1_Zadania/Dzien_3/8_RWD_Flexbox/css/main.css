article {
  display: flex;
  width: 100%;
  height: 200px;
}

article section {
  background-color: grey;
  flex-grow: 1;
  margin: 5px;
}

article section.big {
  flex-grow: 5;
}

.list {
  display: flex;
  list-style: none;
  justify-content: center;
}

section.circles {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: none;
  -ms-flex-pack: none;
  justify-content: none;
  -webkit-box-align: none;
  -ms-flex-align: none;
  align-items: none;
  flex-wrap: wrap;
}

section.circles div.circle {
  background-color: red;
  border-radius: 50%;
  height: 200px;
  width: 200px;
  margin-right: 2px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

section.circles div.circle span {
  color: white;
  font-weight: 700;
  font-size: 50px;
}

section.crazy-layout .row {
  display: flex;
  width: 100%;
}

@media (max-width: 460px) {
  section.crazy-layout .row:nth-of-type(1), section.crazy-layout .row:nth-of-type(2), section.crazy-layout .row:nth-of-type(5) {
    flex-wrap: wrap;
  }
}

@media (max-width: 460px) {
  section.crazy-layout .row:nth-of-type(3) > .col:nth-of-type(1) {
    order: 3;
  }
  section.crazy-layout .row:nth-of-type(3) > .col:nth-of-type(2) {
    order: 1;
  }
  section.crazy-layout .row:nth-of-type(3) > .col:nth-of-type(3) {
    order: 4;
  }
  section.crazy-layout .row:nth-of-type(3) > .col:nth-of-type(4) {
    order: 3;
  }
}

section.crazy-layout .row .col {
  height: 80px;
  background-color: cyan;
  margin: 5px;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

section.crazy-layout .row .col span {
  font-size: 40px;
}

section.crazy-layout .row .last {
  align-self: flex-end;
  width: 100%;
}

section.crazy-layout .row .eight {
  flex-grow: 2;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB6YWRhbmllIHogd3lrxYJhZG93Y8SFXHJcblxyXG5hcnRpY2xlIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcblxyXG4gICAgc2VjdGlvbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgbWFyZ2luOiA1cHg7XHJcblxyXG4gICAgICAgICYuYmlnIHtcclxuICAgICAgICAgICAgZmxleC1ncm93OiA1O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIHphZGFuaWUgMVxyXG5cclxuLmxpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLy8gemFkYW5pZSAyXHJcblxyXG5AbWl4aW4gZmxleCgkanVzdGlmeSwgJGFsaWduKXtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLXdlYmtpdC1ib3gtcGFjazogJGp1c3RpZnk7XHJcbiAgICAtbXMtZmxleC1wYWNrOiAkanVzdGlmeTtcclxuICAgIGp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XHJcbiAgICAtd2Via2l0LWJveC1hbGlnbjogJGFsaWduO1xyXG4gICAgLW1zLWZsZXgtYWxpZ246ICRhbGlnbjtcclxuICAgIGFsaWduLWl0ZW1zOiAkYWxpZ247XHJcbn1cclxuXHJcbnNlY3Rpb24uY2lyY2xlcyB7XHJcbiAgICBAaW5jbHVkZSBmbGV4KG5vbmUsIG5vbmUpO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgIGRpdi5jaXJjbGUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgaGVpZ2h0OiAyMDBweDtcclxuICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChjZW50ZXIsIGNlbnRlcik7XHJcblxyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDo3MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIHphZGFuaWUgM1xyXG5cclxuc2VjdGlvbiB7XHJcbiAgICAmLmNyYXp5LWxheW91dCB7XHJcblxyXG4gICAgICAgIC5yb3cge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMSksXHJcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMiksXHJcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoNSkge1xyXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ2MHB4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOndyYXA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMyl7XHJcbiAgICAgICAgICAgICAgICA+LmNvbCB7XHJcbiAgICAgICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ2MHB4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiA0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5jb2wge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4MHB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogY3lhbjtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmxhc3Qge1xyXG4gICAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmVpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZ3JvdzogMjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLEFBQUEsT0FBTyxDQUFDO0VBQ0osT0FBTyxFQUFFLElBQUk7RUFDYixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxLQUFLO0NBV2hCOztBQWRELEFBS0ksT0FMRyxDQUtILE9BQU8sQ0FBQztFQUNKLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsU0FBUyxFQUFFLENBQUM7RUFDWixNQUFNLEVBQUUsR0FBRztDQUtkOztBQWJMLEFBS0ksT0FMRyxDQUtILE9BQU8sQUFLSCxJQUFLLENBQUM7RUFDRixTQUFTLEVBQUUsQ0FBQztDQUNmOztBQU9ULEFBQUEsS0FBSyxDQUFDO0VBQ0YsT0FBTyxFQUFFLElBQUk7RUFDYixVQUFVLEVBQUUsSUFBSTtFQUNoQixlQUFlLEVBQUUsTUFBTTtDQUMxQjs7QUFnQkQsQUFBQSxPQUFPLEFBQUEsUUFBUSxDQUFDO0VBWFosT0FBTyxFQUFFLFdBQVc7RUFDcEIsT0FBTyxFQUFFLFdBQVc7RUFDcEIsT0FBTyxFQUFFLElBQUk7RUFDYixnQkFBZ0IsRUFTRixJQUFJO0VBUmxCLGFBQWEsRUFRQyxJQUFJO0VBUGxCLGVBQWUsRUFPRCxJQUFJO0VBTmxCLGlCQUFpQixFQU1HLElBQUk7RUFMeEIsY0FBYyxFQUtNLElBQUk7RUFKeEIsV0FBVyxFQUlTLElBQUk7RUFDeEIsU0FBUyxFQUFFLElBQUk7Q0FpQmxCOztBQW5CRCxBQUlJLE9BSkcsQUFBQSxRQUFRLENBSVgsR0FBRyxBQUFBLE9BQU8sQ0FBQztFQUNQLGdCQUFnQixFQUFFLEdBQUc7RUFDckIsYUFBYSxF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 */
